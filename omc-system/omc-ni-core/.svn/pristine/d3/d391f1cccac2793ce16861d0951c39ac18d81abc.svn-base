/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ltln.modules.ni.omc.core.vo;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;

import com.ltln.modules.ni.omc.core.util.ReflectionUtil;


public class PerformanceVo extends BaseVO{

	static SimpleDateFormat dateFormat = new SimpleDateFormat("yyyyMMddHHmmss");
	 
    private String agentID;
    private String ifIndex;
    private String rmUid;
    private String dn;
    private String userLabel;
    private String monitorCycle;
    private String monitorType;
    private List<PerfDataVo> perfDatas = new ArrayList<>();

	public List<PerfDataVo> getPerfDatas() {
		return perfDatas;
	}

	public void setPerfDatas(List<PerfDataVo> perfDatas) {
		this.perfDatas = perfDatas;
	}

	public String getAgentID() {
        return agentID;
    }

    public void setAgentID(String agentID) {
        this.agentID = agentID;
    }

    public String getIfIndex() {
        return ifIndex;
    }

    public void setIfIndex(String ifIndex) {
        this.ifIndex = ifIndex;
    }

    public String getMonitorCycle() {
        return monitorCycle;
    }

    public void setMonitorCycle(String monitorCycle) {
        this.monitorCycle = monitorCycle;
    }

    public String getMonitorType() {
        return monitorType;
    }

    public void setMonitorType(String monitorType) {
        this.monitorType = monitorType;
    }

	public String getRmUid() {
		return rmUid;
	}

	public void setRmUid(String rmUid) {
		this.rmUid = rmUid;
	}

	public String getDn() {
		return dn;
	}

	public void setDn(String dn) {
		this.dn = dn;
	}

	public String getUserLabel() {
		return userLabel;
	}

	public void setUserLabel(String userLabel) {
		this.userLabel = userLabel;
	}

	public String getHeader(){
		StringBuilder sb = new StringBuilder();
		sb.append("TimeStamp=").append(dateFormat.format(System.currentTimeMillis()))
		.append("|TimeZone=UTC+8").append("|Period=").append(this.monitorCycle)
		.append("|VendorName=SSDX").append("|ElementType=PTN").append("|PmVersion=V1.2.0");
		sb.append("\r\n");
		return sb.toString();
	}
	
	public static final String NA = "N/A";
	public String getColumn(){
		StringBuilder sb = new StringBuilder();
		sb.append("rmUID|").append("Dn|").append("UserLabel|").append("startTime|");
		List<String> fieldNameList = ReflectionUtil.getFieldNameList(PerfDataVo.class);
		for(String fieldName : fieldNameList){
			if("monitorTime".equalsIgnoreCase(fieldName))continue;
			sb.append(fieldName).append("|");
		}
		sb.deleteCharAt(sb.length()-1);
		sb.append("\r\n");
		return sb.toString();
	}
	
	public String getData(){
		StringBuilder sb = new StringBuilder();
		List<String> fieldNameList = ReflectionUtil.getFieldNameList(PerfDataVo.class);
		for(PerfDataVo vo : this.perfDatas){
			sb.append(this.rmUid).append("|").append(this.dn).append("|")
			.append(this.userLabel).append("|").append(vo.monitorTime).append("|");
			for(String fieldName : fieldNameList){
				if("monitorTime".equalsIgnoreCase(fieldName))continue;
				String value = ReflectionUtil.getFieldVal(vo, fieldName);
				if(NA.equals(value)){
					sb.append("|");
				}else{
					sb.append(value).append("|");
				}
			}
			sb.deleteCharAt(sb.length()-1);
			sb.append("\r\n");
		}
		return sb.toString();
	}

	@Override
	public String getResType() {
		return monitorType;
	}

	@Override
	public String getFileRmUID() {
		return this.monitorCycle;
	}
}
